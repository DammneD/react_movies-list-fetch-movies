{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","MOVIE_API","getMovieByTitle","title","a","fetch","response","json","Response","Error","FindMovie","addMovie","useState","value","setValue","setMovie","isTitleChanged","setIsTitleChanged","isMovieFound","setIsMovieFound","getMovie","foundedMovie","onSubmit","event","preventDefault","htmlFor","type","id","onChange","target","placeholder","cn","onClick","App","setMovies","some","film","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b378be9.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.Plot}\n        <br />\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const MOVIE_API = 'https://www.omdbapi.com/?apikey=c122ff4d&t=';\n\nexport async function getMovieByTitle(title: string): Promise<Movie> {\n  const response = await fetch(`${MOVIE_API}${title}`);\n  const movie = await response.json();\n\n  if (movie.Response === 'True') {\n    return movie;\n  }\n\n  throw new Error(`Error: ${movie.Error}`);\n}\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport { getMovieByTitle } from '../../api/api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie: (movie: Movie | null) => void\n}\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [value, setValue] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isTitleChanged, setIsTitleChanged] = useState(true);\n  const [isMovieFound, setIsMovieFound] = useState(true);\n\n  const getMovie = async () => {\n    try {\n      const foundedMovie = await getMovieByTitle(value);\n\n      setMovie(foundedMovie);\n      setIsMovieFound(true);\n    } catch {\n      setIsMovieFound(false);\n      setIsTitleChanged(false);\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n    setIsTitleChanged(true);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => event.preventDefault()}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                value={value}\n                onChange={handleChange}\n                placeholder=\"Enter a title to search\"\n                className={cn('input', { 'is-danger': !isTitleChanged })}\n              />\n            </div>\n          </label>\n\n          {!isTitleChanged\n            && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n              onClick={getMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addMovie(movie)}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">{`${isMovieFound ? 'Preview' : 'Movie not found :('}`}</h2>\n        {(isMovieFound && movie) && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC<{}> = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie | null) => {\n    if (movie) {\n      if (!movies.some(film => film.imdbID === movie.imdbID)) {\n        setMovies(state => [...state, movie]);\n      }\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}